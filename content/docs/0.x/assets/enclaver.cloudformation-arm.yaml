AWSTemplateFormatVersion: '2010-09-09'
Description: Test Enclaver on a single EC2 machine with Nitro Enclaves enabled
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: "VPC Configuration"
        Parameters: 
          - VpcId
          - SubnetId
      - Label: 
          default: "EC2 Machine"
        Parameters: 
          - InstanceType
          - KeyName
          - LatestAmiId
    ParameterLabels: 
      VpcId: 
        default: "Pick a VPC"
      SubnetId: 
        default: "Pick a subnet"
      InstanceType: 
        default: "Instance type"
      KeyName: 
        default: "SSH key"
      LatestAmiId: 
        default: "AMI to use"
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Existing VPC to place the machine
    AllowedPattern: ".+"
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet within the VPC to place the machine
    AllowedPattern: ".+"
  InstanceType:
    Type: String
    Description: Cheapest Gravitron2 instance that supports Nitro Enclaves
    Default: c6g.large
    AllowedPattern: ".+"
  KeyName:
    Description: SSH Keypair to login to the instance
    Type: AWS::EC2::KeyPair::KeyName
    AllowedPattern: ".+"
  LatestAmiId:
    Description: Amazon Linux 2 Arm AMI for us-east1 Region
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2'
    AllowedPattern: ".+"
Resources:
  DemoLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: EnclaverLaunchTemplate
      LaunchTemplateData:
        MetadataOptions:
          HttpPutResponseHopLimit: 2 # Increase from 1 to 2 due to docker0 hop
        KeyName: !Ref KeyName
        SecurityGroupIds: 
          - !Ref DemoSecurityGroup
        EnclaveOptions:
          Enabled: true
        UserData:
          Fn::Base64: 
            !Sub |
              #!/bin/bash
              amazon-linux-extras install aws-nitro-enclaves-cli
              yum install aws-nitro-enclaves-cli-devel -y
              usermod -aG ne ec2-user
              usermod -aG docker ec2-user
              sed -i 's/cpu_count: 2/cpu_count: 1/g' /etc/nitro_enclaves/allocator.yaml
              sed -i 's/memory_mib: 512/memory_mib: 3072/g' /etc/nitro_enclaves/allocator.yaml
              systemctl start nitro-enclaves-allocator.service && sudo systemctl enable nitro-enclaves-allocator.service
              systemctl start docker && sudo systemctl enable docker
  DemoInstance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      LaunchTemplate: 
          LaunchTemplateId: !Ref DemoLaunchTemplate
          Version: !GetAtt DemoLaunchTemplate.LatestVersionNumber
      IamInstanceProfile: !Ref DemoInstanceProfile
      SubnetId: !Ref SubnetId
  DemoSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Allow SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: Enclaver-Security-Group
  DemoIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  DemoInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref DemoIAMRole
  AccessS3andKMSPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "root"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow" # Allow access to request the old KMS key, which is protected by the attestation PCR0
            Action:
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
            Resource: "arn:aws:kms:us-east-1:841252696414:key/mrk-b3152356da604a7dac485a0a272957c7"
          - Effect: "Allow" # Allow access to request the KMS key, which is protected by the attestation PCR0
            Action:
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
            Resource: "arn:aws:kms:us-east-1:970625735569:key/mrk-39c14bd4d71f40e390fc158fab0697dd"
          - Effect: "Allow" # Allow access to request the encrypted envelope from old S3 bucket, which is publicly available
            Action:
              - 's3:getObject'
            Resource: "arn:aws:s3:::no-fly-list/no-fly-envelope.txt"
      Roles:
        - Ref: "DemoIAMRole"
Outputs:
  DemoInstanceId:
    Description: Instance Id 
    Value: !Ref DemoInstance
